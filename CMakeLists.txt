cmake_minimum_required(VERSION 3.13)
set(CMAKE_CONFIGURATION_TYPES Debug Release)
project("CefLib")
set_property(GLOBAL PROPERTY OS_FOLDERS ON)
#set(CEF_VERSION "137.0.10+g7e14fe1+chromium-137.0.7151.69" CACHE STRING "CEF Version to Download")
#set(CEF_VERSION "138.0.36+g52669d7+chromium-138.0.7204.184" CACHE STRING "CEF Version to Download")
set(CEF_VERSION "139.0.17+g6c347eb+chromium-139.0.7258.31" CACHE STRING "CEF Version to Download")
message(STATUS "CEF Version: ${CEF_VERSION}")
message(STATUS "CEF Platform: ${CEF_PLATFORM}")
message(STATUS "System Name: ${CMAKE_SYSTEM_NAME}")
message(STATUS "System Processor: ${CMAKE_SYSTEM_PROCESSOR}")
if (NOT DEFINED CEF_PLATFORM)
    if ("${CMAKE_SYSTEM_NAME}" STREQUAL "Darwin")
        if ("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "arm64")
            set(CEF_PLATFORM "macosarm64")
        else ()
            set(CEF_PLATFORM "macosx64")
        endif ()
    elseif ("${CMAKE_SYSTEM_NAME}" STREQUAL "Linux")
        if (CMAKE_SIZEOF_VOID_P MATCHES 8)
            set(CEF_PLATFORM "linux64")
        else ()
            set(CEF_PLATFORM "linux32")
        endif ()
    elseif ("${CMAKE_SYSTEM_NAME}" STREQUAL "Windows")
        if (CMAKE_SIZEOF_VOID_P MATCHES 8)
            set(CEF_PLATFORM "windows64")
        else ()
            set(CEF_PLATFORM "windows32")
        endif ()
    endif ()
endif ()
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/app/cmake/cef")
include(DownloadCEF)
downloadcef("${CEF_PLATFORM}" "${CEF_VERSION}" "${CMAKE_SOURCE_DIR}/temp/cef")
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CEF_ROOT}/cmake")
find_package(CEF REQUIRED)
add_subdirectory(${CEF_LIBCEF_DLL_WRAPPER_PATH} libcef_dll_wrapper)
set(USE_SANDBOX OFF)
include(${CMAKE_CURRENT_SOURCE_DIR}/app/cmake/shared/common.cmake)
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/app/cmake/shared)
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/app/cmake/main)
print_cef_config()
